from flask import Flask, render_template, request, jsonify
import cv2
import pytesseract
import tensorflow as tf
import numpy as np

app = Flask(__name__)

# Load the trained machine learning model
# Replace this with your model loading code
# Example:
# model = tf.keras.models.load_model('model.h5')

def process_image(image_path):
    # Load the image
    image = cv2.imread(image_path)

    # Preprocess the image (e.g., resize, convert to grayscale)
    # Your preprocessing steps here

    # Apply OCR to extract the text from the number plate
    text = pytesseract.image_to_string(image)

    return text

def predict_with_ml(image_path):
    # Preprocess the image
    # Your preprocessing steps here

    # Use your trained ML model to predict
    # Example:
    # prediction = model.predict(preprocessed_image)
    # Extract relevant information from the prediction
    
    # For demonstration purposes, let's assume some dummy results
    car_company = "ABC Motors"
    state = "XYZ"
    
    return car_company, state

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'})

    file = request.files['file']

    if file.filename == '':
        return jsonify({'error': 'No selected file'})

    if file:
        file_path = 'uploads/' + file.filename
        file.save(file_path)
        number_plate_text = process_image(file_path)
        car_company, state = predict_with_ml(file_path)
        return jsonify({'car_company': car_company, 'state': state})

if __name__ == '__main__':
    app.run(debug=True)
